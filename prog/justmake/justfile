# Justfile

# Variables
today := `date +'%e-%b-%y_%H-%M-%S'`
version := "0.0.1"
venv_dir := "venv"
pypy_venv_dir := "pypy-venv"
requirements := "requirements.txt"
results_dir := "results/simulation/"
backup_results_dir := "var/backup/results/"
varlog := "var/log/"
varprofiler := "var/profiler/"
lib := "lib/"
backup_project_dir := "var/backup/project"
main_file := "main.py"
license := "https://raw.githubusercontent.com/gcontesini/reference_files/refs/heads/main/LICENSE"
readme := "https://raw.githubusercontent.com/gcontesini/reference_files/refs/heads/main/README.md"
gitignore := "https://raw.githubusercontent.com/gcontesini/reference_files/refs/heads/main/.gitignore"

sep := "\n<----------------------------------------------------------------->\n"
# ==============================================================================
# todo: 
# - change behaviour based on os: @echo "Operating System: {{os}}"
# - install justfile itself : write a sheel script that install justfile
# - install docker
# - create docker image
# - run docker container
# - install pypy3-venv : create a standard pypy3-environment
# - run pypy3
# - fix the bug in log level
# ==============================================================================
# Show all the setup scripts in justfile
help:
	@just --list
# ==============================================================================
# Install Python dependencies
install:
	@echo " {{sep}} Installing Python dependencies...ðŸ’¿ {{sep}} "
	@just start-blank-project
	@{{venv_dir}}/bin/pip install --upgrade pip
	@{{venv_dir}}/bin/pip install -r {{requirements}}
	@echo " {{sep}} Python dependencies installed  âœ… {{sep}}"
# ==============================================================================
# Start a blank project from scratch
start-blank-project:
	@echo " {{sep}} Starting Project Project...ðŸ’¿ {{sep}} "
	@python3 -m venv {{venv_dir}}
	@{{venv_dir}}/bin/pip install --upgrade pip
	@mkdir -p {{results_dir}}
	@mkdir -p {{varlog}}
	@mkdir -p {{varprofiler}}
	@mkdir -p {{lib}}
	@touch {{lib}}/__init__.py
	@touch {{main_file}}
	@curl -O {{readme}}
	@curl -O {{gitignore}}
	@curl -O {{license}}
	@just add scalene
	@just add numpy
	@echo " {{sep}} New Project Ready âœ… {{sep}} "
# ==============================================================================
# Reinstall project from scratch
restart-project:
	@echo " {{sep}} Reinstalling Project...ðŸ’¿ {{sep}} "
	@just clean
	@rm -rf "{{venv_dir}}"
	@just install
	@echo " {{sep}} Reinstalled Project âœ… {{sep}} "
# ==============================================================================
# Clean up data simulation directory
clean-data:
	@echo " {{sep}} Cleaning {{results_dir}} directory...ðŸ’¿ {{sep}} "
	@if [ -d "{{results_dir}}" ]; then rm -rf {{results_dir}}/*; fi
	@echo " {{sep}} Clean Project âœ… {{sep}} "
# ==============================================================================
# Clean up /var/log directory
clean-log:
	@echo " {{sep}} Cleaning {{results_dir}} directory...ðŸ’¿ {{sep}} "
	@if [ -d "{{varlog}}" ]; then rm -rf {{varlog}}/*; fi
	@echo " {{sep}} Clean Project âœ… {{sep}} "
# ==============================================================================
# Add Python module
add module:
	@echo " {{sep}} Adding module...ðŸ’¿ {{sep}} "
	@{{venv_dir}}/bin/pip install {{module}}
	@echo " {{sep}} {{module}} added to the project âœ… {{sep}}"
	just update-requirements
# ==============================================================================
# Update Python dependencies
update-requirements:
	@echo " {{sep}} Updating Python dependencies...ðŸ’¿ {{sep}} "
	@{{venv_dir}}/bin/pip freeze > {{requirements}}
	@echo " {{sep}} Python dependencies updated âœ… {{sep}}"
# ==============================================================================
# Run module in local python3
run module:
	@echo " {{sep}} Running  {{module}}...ðŸ’¿ {{sep}} ";
	@time {{venv_dir}}/bin/python {{module}}
	@echo " {{sep}} Finished ...âœ… {{sep}} ";
# ==============================================================================
# There is a bug on log level here
# Run main scripts
# debug module log_level="":
# 	@echo " {{sep}} Running  {{module}}...ðŸ’¿ {{sep}} ";
# 	@LOG_FLAG=""; \
# 	if [ -n "{{log_level}}" ]; then \
# 		LOG_FLAG="--log {{log_level}}"; fi; \
# 		(time {{venv_dir}}/bin/python {{module}} ${LOG_FLAG});
# 	@echo " {{sep}} Finished ...âœ… {{sep}} ";
# ==============================================================================
# start the software's gui
start:
	{{venv_dir}}/bin/python3 gui.py
# ==============================================================================
# run module in profiler mode
profiler module:
	@echo " {{sep}} Running  {{module}}...ðŸ’¿ {{sep}} ";
	@just add scalene
	@time {{venv_dir}}/bin/python3 -m scalene {{module}}
	@echo " {{sep}} Finished ...âœ… {{sep}} ";
# ==============================================================================
# Delete the project and backup results
delete-project:
	@echo " {{sep}} Deleting Project...ðŸ’¿ {{sep}} "
	@just backup-project
	@just backup-results
	@rm -rf {{venv_dir}}
	@echo " {{sep}} Project deleted âœ… {{sep}} "
# ==============================================================================
# Backup results into a zip file
backup-project:
	@echo " {{sep}} Backing up project...ðŸ’¿ {{sep}} "
	@mkdir -p {{backup_project_dir}}
	@zip -r project_backup_$(whoami)_$(date +%Y-%m-%d).zip . -x "{{venv_dir}}/*" "{{pypy_venv_dir}}/*" ".git/*" "*__pycache__/*" ".vscode/*" "var/*"
	@mv project_backup_$(whoami)_$(date +%Y-%m-%d).zip {{backup_project_dir}}
	@tree -a -I 'venv|.git|.vscode|__pycache__|pypy-env|var/|results/simulation/' > project_structure.txt
	@echo " {{sep}} Backed up complete âœ… {{sep}} "
	just backup-results
# ==============================================================================
# Backup results into a zip file
backup-results:
	@echo " {{sep}} Backing up results...ðŸ’¿ {{sep}} "
	@mkdir -p {{backup_results_dir}}
	@zip -r results_backup_$(whoami)_$(date +%Y-%m-%d).zip {{results_dir}}
	@mv results_backup_$(whoami)_$(date +%Y-%m-%d).zip {{backup_results_dir}}
	@echo " {{sep}} Backed up complete âœ… {{sep}} "
# ==============================================================================
# Run with PyPy
# pypy:
# ==============================================================================
# install-docker
# install-docker
# ==============================================================================
# create-docker-image
# create-docker-image
# ==============================================================================
# run-docker-container
# run-docker-container
# ==============================================================================